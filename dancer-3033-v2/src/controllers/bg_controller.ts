import { Request, Response } from "express";
import express = require("express");
import { appTo } from "../helpers/messaging";
import {log } from "../log";
export class BGController {

  public routes(app: express.Application): void {
    console.log(
      `游끱游끱游끱    BGController:  游눛 setting up / and /ping routes: 驕떮잺 use to check if API is up ... ${app.name}`,
    );
    app.route("/locations").post((req: Request, res: Response) => {
      const msg = `游꼞 BGController/locations: Adding background location: 游눛游눛游눛游눛游눛游눛 ${req.body}`;
      log(msg);
      try {
        if (req.body) {
          let firestore = appTo.firestore()
          firestore.collection('locations').add(req.body)
          log('游꼞 Background location added to  游땘 Firestore')
        } else {
          log(' 游땘 游땘 游땘 Background location is null. 游볹游볹 ignore! ')
        }
       
      } catch (e) {
        console.error('Firestore problem. may not be available')
      }
      res.status(200).json({
        message: msg,
      });
    });
    app.route("/geofences").post((req: Request, res: Response) => {
      const msg = `游꼝  BGController/geofences: Adding geofence action: 游눛游눛游눛游눛游눛游눛 ${req.body}`;
      log(msg);
      try {
        if (req.body) {
          let firestore = appTo.firestore()
          firestore.collection('geofences').add(req.body)
          log('游꼝  Background geofence added to  游땘 Firestore')
        } else {
          log(' 游땘 游땘 游땘 Background location is null. 游볹游볹 ignore! ')
        }
       
      } catch (e) {
        console.error('Firestore problem. may not be available')
      }
      res.status(200).json({
        message: msg,
      });
    });
    app.route("/heartbeats").post((req: Request, res: Response) => {
      const msg = `游비 BGController/heartbeats: Adding heartbeat : 游눛游눛游눛游눛游눛游눛 ${req.body}`;
      log(msg);
      try {
        if (req.body) {
          let firestore = appTo.firestore()
          firestore.collection('heartbeats').add(req.body)
          log('游비 Background heartbeat added to  游땘 Firestore')
        } else {
          log(' 游땘 游땘 游땘 Background heartbeat is null. 游볹游볹 ignore! ')
        }
       
      } catch (e) {
        console.error('Firestore problem. may not be available')
      }
      res.status(200).json({
        message: msg,
      });
    });
    app.route("/activityChanges").post((req: Request, res: Response) => {
      const msg = `游비 BGController/activityChanges: Adding activityChanges : 游눛游눛游눛游눛游눛游눛 ${req.body}`;
      log(msg);
      try {
        if (req.body) {
          let firestore = appTo.firestore()
          firestore.collection('activityChanges').add(req.body)
          log('游비 Background activityChanges added to  游땘 Firestore')
        } else {
          log(' 游땘 游땘 游땘 Background activityChanges is null. 游볹游볹 ignore! ')
        }
       
      } catch (e) {
        console.error('Firestore problem. may not be available')
      }
      res.status(200).json({
        message: msg,
      });
    });
  }
}